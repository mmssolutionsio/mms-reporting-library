@use "variables";
@use "sass:list";
@use "sass:map";

@function is($list, $map: variables.$meta) {
  $current: false;
  $next: ();

  @each $key, $index in $list {
    @if $current == false {
      $current: $key;
    } @else {
      $next: list.append($next, $key);
    }
  }

  @if $current and map.has-key($map, $current) {
    @if list.length($next) > 0 {
      @return is($next, map.get($map, $current));
    } @else {
      @return true;
    }
  } @else {
    @return false;
  }
}

@function get($list, $map: variables.$meta) {
  $current: false;
  $next: ();

  @each $key, $index in $list {
    @if $current == false {
      $current: $key;
    } @else {
      $next: list.append($next, $key);
    }
  }

  @if $current and map.has-key($map, $current) {
    @if list.length($next) > 0 {
      @return get($next, map.get($map, $current));
    } @else {
      @return map.get($map, $current);
    }
  } @else {
    @return false;
  }
}

@function spacer($name) {
  @if not map-has-key(variables.$spacer, $name) {
    @error "Invalid name for spacer specified! Choose one of #{map-keys(variables.$spacer)}";
  }
  @return map-get(variables.$spacer, $name)
}

@function padding($name) {
  @if not map-has-key(variables.$padding, $name) {
    @error "Invalid name for padding specified! Choose one of #{map-keys(variables.$padding)}";
  }
  @return map-get(variables.$padding, $name)
}